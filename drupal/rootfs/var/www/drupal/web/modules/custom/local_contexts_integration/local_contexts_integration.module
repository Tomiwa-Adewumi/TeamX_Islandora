<?php

/**
 * @file
 * Provides hooks for the Local Contexts Integration module.
 */

/**
 * Implements hook_help().
 */
function local_contexts_integration_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.local_contexts_integration') {
    return '<p>' . t('Provides integration with the Local Contexts API for displaying Traditional Knowledge Labels.') . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function local_contexts_integration_theme() {
  return [
    'local_contexts_block' => [
      'variables' => [
        'unique_id' => '',
        'title' => '',
        'date_added' => '',
        'date_modified' => '',
        'tk_labels' => [],
      ],
      'template' => 'local-contexts-block',
    ],
  ];
}
 /**
 * Implements hook_install().
 */
function local_contexts_integration_install() {
  // Automatically place the block in the sidebar_second region.
  $block = \Drupal\block\Entity\Block::create([
    'id' => 'project_data_block', // A unique machine name for the block instance.
    'plugin' => 'local_contexts_block', // The plugin ID from the @Block annotation in your block class.
    'region' => 'sidebar', // Adjust based on your theme's available regions.
    'theme' => 'local_contexts_block', // Replace with the machine name of your theme.
    'visibility' => [
      'node_type' => [
        'id' => 'node_type',
        'contexts' => ['node'],
        'negate' => FALSE,
        'node_types' => ['repository'], // Restrict block visibility to "repository" content type.
      ],
    ],
    'status' => TRUE, // Ensure the block is enabled.
  ]);
  $block->save();
}


